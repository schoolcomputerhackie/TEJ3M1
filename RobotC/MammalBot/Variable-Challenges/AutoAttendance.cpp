/* Credit to "The Xbots" on github.
2023-11-07 */
#pragma config(Sensor, S3,     light,          sensorLightActive)
#pragma config(Sensor, S4,     sonar,          sensorSONAR)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

void da(char* dirorstraight, int l, int s, bool ua) //Do Action Specified
{
	if (dirorstraight == "f") { // If it wants to go straight
		motor(motorB) = s;
		motor(motorC) = s;
	}
	else if (dirorstraight == "l") { // If it wants turn left
		motor(motorB) = s;
		motor(motorC) = -s;
	}
	else if (dirorstraight == "r") { // If it wants turn right
		motor(motorB) = -s;
		motor(motorC) = s;
	}
	else if (dirorstraight == "b") { // If it wants go backwards
		motor(motorB) = -s;
		motor(motorC) = -s;
	}

	if (ua == true) { // If i specify to change duration to the angle to turn at, then
		delay((14.08 * (((s-50)*-1)+50)/100)*l); // Angle Script
	}

	else if (ua == false) { // If I dont specify to convert duration to angle
		delay(l); // Wait duration
	}
}

task main()
{
	int Students = 0; // Commit a variable
	displayTextLine(1, "Students:");
	displayTextLine(2, "%d", Students);
	int i; // Int "i" commit

	for (i=0;i<3;i++) { // Repeat 3 times
		da("f", 1000, 50, false); // Move forward
		while(SensorValue[S3] > 14) { // While light sensor is bright
			displayTextLine(2, "%d", Students); // Display the distance on the second line
			da("f", 0, 50, false); // Move forward

		}

		displayTextLine(4, "Found Line!"); // Display that it found a line on the fourth line

		da("r", 90, 50, true); // Turn 90 degrees

		while(SensorValue[S3] > 14) { // While it is bright and not touching line
			displayTextLine(2, "%d", Students); // Display the distance on the second line

			da("f", 0, 50, false); // Move forward

		}

		if (SensorValue[S4] < 20) {
			Students += 1;
			displayTextLine(2, "%d", Students); // Display the distance on the second line
		}

		da("r", 180, 50, true); // Turn right

		while(SensorValue[S3] > 14) { // While it is bright and not touching line
			displayTextLine(2, "%d", Students); // Display the distance on the second line

			da("f", 0, 50, false); // Move forward
		}

		if (SensorValue[S4] < 20) {
			Students += 1;
			displayTextLine(2, "%d", Students); // Display the distance on the second line
		}

		da("b", 1000, 50, false); // Move backward
		da("r", 90, 50, true); // Turn right

	}
	
	da("r",180, 50, true); // Turn 180
	
	da("f", 5000, 50, false); // Move until you are finished
}
