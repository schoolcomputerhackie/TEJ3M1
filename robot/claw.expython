#region VEXcode Generated Robot Configuration
from vex import *
import urandom

# Brain should be defined by default
brain = Brain()

# Robot configuration code
brain_inertial = Inertial()
left_drive_smart = Motor(Ports.PORT6, False)
right_drive_smart = Motor(Ports.PORT10, True)
drivetrain = SmartDrive(left_drive_smart, right_drive_smart, brain_inertial, 259.34, 320, 40, MM, 1)
arm = Motor(Ports.PORT3, False)
claw = Motor(Ports.PORT4, False)


# Wait for sensor(s) to fully initialize
wait(100, MSEC)

def calibrate_drivetrain():
    # Calibrate the Drivetrain Inertial
    sleep(200, MSEC)
    brain.screen.print("Calibrating")
    brain.screen.next_row()
    brain.screen.print("Inertial")
    brain_inertial.calibrate()
    while brain_inertial.is_calibrating():
        sleep(25, MSEC)
    brain.screen.clear_screen()
    brain.screen.set_cursor(1, 1)

#endregion VEXcode Generated Robot Configuration

def liftclaw(direction):
    if direction == 'up':
        claw.spin_for(FORWARD,110,DEGREES)
        wait(0.5,SECONDS)
        arm.spin_for(FORWARD,180,DEGREES)
    elif direction == 'down':
        arm.spin_for(REVERSE,180,DEGREES)
        wait(0.5,SECONDS)
        claw.spin_for(REVERSE,110,DEGREES)
def whenstarted():
    liftclaw('up')
    drivetrain.drive_for(FORWARD,1000,MM)
    drivetrain.turn_for(RIGHT,90,DEGREES)
    drivetrain.drive_for(FORWARD,1000,MM)
    liftclaw('down')                 
whenstarted()
